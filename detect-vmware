#!/usr/bin/env zsh
# macos-scripts/detect-vmware

# detect-vmware
#  Try to determine if we're in a VMware Virtual Machine       
#  https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/VMWare.cpp

set -uo pipefail
# -u prevent using undefined variables
# -o pipefail force pipelines to fail on first non-zero status code

IFS=$'\n\t'
# Set Internal Field Separator to newlines and tabs
# This makes bash consider newlines and tabs as separating words
# See: http://redsymbol.net/articles/unofficial-bash-strict-mode/


function check_mac_address {

  # VMware, Inc MAC address vendor identifiers 
  # 00:05:69, 00:0c:29, 00:1C:14, 00:50:56

  echo "[üëÄ] Checking Network Adaptor MAC Address(es)"
  
  if wifi_mac="$(networksetup -getmacaddress wi-fi | awk '{print $3}')"; then
    if [[ "${wifi_mac}" =~ 00:05:69\|00:0c:29\|00:1C:14\|00:50:56 ]]; then
      echo "[‚ö†Ô∏è ] Probably VMware"
      echo "[ü§î] However, there is a Wi-Fi interface so maybe not?"
    fi
  fi
  
  if ethernet_mac="$(networksetup -getmacaddress ethernet | awk '{print $3}')"; then
    if [[ "${ethernet_mac}" =~ 00:05:69\|00:0c:29\|00:1C:14\|00:50:56 ]]; then
      echo "[‚ö†Ô∏è ] Probably VMware"
    fi
  fi
  echo
}

function check_shared_folders {

  echo "[üëÄ] Checking for Shared Folders Directory"

  if [[ -d "/Volumes/VMware Shared Folders" ]]; then 
    echo "[‚ö†Ô∏è ] Probably VMware"
  fi

  echo 
}

function check_kexts {

  echo "[üëÄ] Checking Installed Kexts"

  if [[ -d "/Library/Extensions/VMwareGfx.kext" ]]; then 
    echo "[‚ö†Ô∏è ] Probably VMware"
  fi

  echo
  echo "[üëÄ] Checking Loaded Kexts"

  if kextstat | grep -q 'com.vmware.kext.VMwareGfx' || kextstat | grep -q 'com.vmware.kext.vmhgfs'; then
    echo "[‚ö†Ô∏è ] Probably VMware"
  fi

  echo
}

function check_drivers {

  echo "[üëÄ] Checking Drivers via I//O Registry"

  if ioreg | grep "VMware" >/dev/null; then
    # TODO: Absolutely no idea why grep "VMware" doesnt work
    echo "[‚ö†Ô∏è ] Probably VMware"
  fi

  echo
}

function check_hardware_info {

  echo "[üëÄ] Checking System Hardware Data"

  hardware_data=$(system_profiler SPHardwareDataType)

  if echo "${hardware_data}" | grep -q 'VMware' || echo "${hardware_data}" | grep -q 'Virtual Machine' ; then
    echo "[‚ö†Ô∏è ] Probably VMware"
  fi
}

function main {

  check_mac_address
  check_shared_folders
  check_kexts
  check_drivers
  check_hardware_info
}

main "$@"
