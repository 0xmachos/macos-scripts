#!/usr/bin/env bash
# macos-scripts/1015-check

# 1015-check
#  Check for 32-bit code
#  Check for unnotarized kernel extensions (kexts)

set -euo pipefail
# -e exit if any command returns non-zero status code
# -u prevent using undefined variables
# -o pipefail force pipelines to fail on first non-zero status code


IFS=$'\n\t'
# Set Internal Field Separator to newlines and tabs
# This makes bash consider newlines and tabs as separating words
# See: http://redsymbol.net/articles/unofficial-bash-strict-mode/

### Define Colours ###
tput sgr0; 
# reset colors

readonly RESET=$(tput sgr0)
readonly BOLD=$(tput bold)

readonly RED=$(tput setaf 1)
readonly GREEN=$(tput setaf 64)
### END Colours ###


function check_kexts_notarized {

  echo "Unnotarized Kexts"
  
  for kext in /Library/Extensions/*; do
    # echo "${kext}"
    if ! /Library/Developer/CommandLineTools/usr/bin/stapler validate "${kext}" >/dev/null 2>&1; then
      echo "${kext}"
    fi
  done
}


function check_32_bit_code {
  # Thanks to @rtrouton for this one liner
  # https://twitter.com/rtrouton/status/1130482310762115072

  echo "32-bit code"

  mdfind "kMDItemExecutableArchitectures == '*i386*' && kMDItemExecutableArchitectures != '*x86*'"
}


function main {

  check_kexts_notarized
  echo
  check_32_bit_code
}

main "$@"
